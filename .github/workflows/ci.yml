name: Continuous Integration

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build-python:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [macOS-latest, ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: "Check out repository code"
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install flake8
          python -m pip install junit2html
          pip install poetry
          poetry shell
          poetry install --with test
      - name: "Lint with flake8"
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: "Test with pytest"
        run: pytest tests --junitxml=junit/test-results.xml --cov=equalityml --cov-report term --cov-report=html
      - name: "Run junit2html"
        run: |
          junit2html junit/test-results.xml test-results.html
      - name: "Upload pytest test results"
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: test-results.html
        if: ${{ always() }}
      - name: "Upload pytest test coverage"
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: htmlcov
        if: ${{ always() }}
